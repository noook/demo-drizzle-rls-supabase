{
  "id": "36aebb1e-ae2d-49cb-af06-769fd2dd48a6",
  "prevId": "14a52dce-24e8-4549-8de6-db420bf3a00f",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.question_choices": {
      "name": "question_choices",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "choice": {
          "name": "choice",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "question_choices_question_id_questions_id_fk": {
          "name": "question_choices_question_id_questions_id_fk",
          "tableFrom": "question_choices",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "users can create choices for their question": {
          "name": "users can create choices for their question",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = (select author_id from questions where id = \"question_choices\".\"question_id\")"
        },
        "users can read choices": {
          "name": "users can read choices",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.questions": {
      "name": "questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "question": {
          "name": "question",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "author_id": {
          "name": "author_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "allow_extra_choice": {
          "name": "allow_extra_choice",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "questions_author_id_users_id_fk": {
          "name": "questions_author_id_users_id_fk",
          "tableFrom": "questions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "author_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "users can create questions": {
          "name": "users can create questions",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"questions\".\"author_id\""
        },
        "users can read questions": {
          "name": "users can read questions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.votes": {
      "name": "votes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "votes_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "answer": {
          "name": "answer",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "voter_id": {
          "name": "voter_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "votes_question_id_questions_id_fk": {
          "name": "votes_question_id_questions_id_fk",
          "tableFrom": "votes",
          "tableTo": "questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "votes_voter_id_users_id_fk": {
          "name": "votes_voter_id_users_id_fk",
          "tableFrom": "votes",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "voter_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_vote_per_user_per_question": {
          "name": "unique_vote_per_user_per_question",
          "nullsNotDistinct": false,
          "columns": [
            "question_id",
            "voter_id"
          ]
        }
      },
      "policies": {
        "users can vote": {
          "name": "users can vote",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"votes\".\"voter_id\""
        },
        "users can read their votes": {
          "name": "users can read their votes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"votes\".\"voter_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}